<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/styles.css">
  <title>Home</title>
</head>
<body>
  <header>
    <nav>
      <a href="/">Home</a>
      <a href="/anime">Anime</a>
      <a href="/books">Books</a>
      <a href="/photos">Photography</a>
    </nav>
  </header>

  <main>
    <h1>Welcome to the Gallery</h1>
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Interactive 3D Cube</title>
      <style>
        body {
          margin: 0;
          overflow: hidden;
          background: #000; 
        }
    
        .scene {
          width: 50vmin;
          height: 50vmin;
          perspective: 1000px;
          margin: 0 auto;
          position: relative;
          top: 10vh;
        }
    
        .cube {
          width: 100%;
          height: 100%;
          position: relative;
          transform-style: preserve-3d;
          transition: transform 0.1s ease-out;
        }
    
        .cube div {
          position: absolute;
          width: 60%;
          height: 60%;
          background-size: cover;
          background-position: center;
          background-repeat: no-repeat;
          border: 2px solid rgba(255, 255, 255, 0.5);
          box-shadow: 0 0 20px rgba(255, 255, 255, 0.8); 
          opacity: 0.9; 
        }
    
        .front  {  transform: rotateY(0deg) translateZ(25vmin); }
        .back   {  transform: rotateY(180deg) translateZ(25vmin); }
        .right  {  transform: rotateY(90deg) translateZ(25vmin); }
        .left   {  transform: rotateY(-90deg) translateZ(25vmin); }
        .top    {  transform: rotateX(90deg) translateZ(25vmin); }
        .bottom { transform: rotateX(-90deg) translateZ(25vmin); }
    
        @media (max-width: 600px) {
          .scene {
            width: 70vmin;
            height: 70vmin;
          }
    
          .cube div {
            box-shadow: 0 0 25px rgba(255, 255, 255, 0.9); 
            opacity: 0.85; 
          }
        }
    
        @media (min-width: 1200px) {
          .scene {
            width: 40vmin;
            height: 40vmin;
          }
    
          .cube div {
            box-shadow: 0 0 20px rgba(255, 255, 255, 0.7);
            opacity: 0.9;
          }
        }
      </style>
    </head>
    <body>
      <div class="scene">
        <div class="cube">
          <div class="front"></div>
          <div class="back"></div>
          <div class="right"></div>
          <div class="left"></div>
          <div class="top"></div>
          <div class="bottom"></div>
        </div>
      </div>
    
      <script>
        const cube = document.querySelector('.cube');
    
        let mouseX = 0;
        let mouseY = 0;
        let rotationX = 0;
        let rotationY = 0;
        let rotationSpeed = 0.5; // rotation speed 
    
        function updateCubeTransform() {
          cube.style.transform = `rotateX(${rotationX}deg) rotateY(${rotationY}deg)`;
        }
    
        function animate() {
          rotationY += rotationSpeed; // Continuously rotate
          updateCubeTransform();
          requestAnimationFrame(animate);
        }
    
        animate(); // animation loop
    
        function onMouseMove(e) {
          const rect = cube.getBoundingClientRect();
          mouseX = (e.clientX - rect.left) / rect.width * 2 - 1;
          mouseY = (e.clientY - rect.top) / rect.height * 2 - 1;
    
          rotationX = -mouseY * 30;
          rotationY = mouseX * 30;
    
          updateCubeTransform();
        }
    
        function onTouchMove(e) {
          e.preventDefault();
          const touch = e.touches[0];
          const rect = cube.getBoundingClientRect();
          mouseX = (touch.clientX - rect.left) / rect.width * 2 - 1;
          mouseY = (touch.clientY - rect.top) / rect.height * 2 - 1;
    
          rotationX = -mouseY * 30;
          rotationY = mouseX * 30;
    
          updateCubeTransform();
        }
    
        document.addEventListener('mousemove', onMouseMove);
        document.addEventListener('touchmove', onTouchMove);
        document.addEventListener('touchstart', onTouchMove);
    
        window.addEventListener('beforeunload', () => {
          cancelAnimationFrame(animate);
        });
      </script>
    </body>
    </html>
    

    
    
    
  </main>
  
<%- include('footer') %>
</body>
</html>
